/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
 * This code was autogenerated by RooClassFactory                            *
 *****************************************************************************/

// Your description goes here...

#include "Riostream.h"

#include "VariableWidthGaus2.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
#include <math.h>
#include "TMath.h"

 VariableWidthGaus2::VariableWidthGaus2(const char *name, const char *title,
                        RooAbsReal& _x,
                        RooAbsReal& _x0,
                        RooAbsReal& _alpha,
                        RooAbsReal& _beta,
                        RooAbsReal& _gamma) :
   RooAbsPdf(name,title),
   x("x","x",this,_x),
   x0("x0","x0",this,_x0),
   alpha("alpha","alpha",this,_alpha),
   beta("beta","beta",this,_beta),
   gamma("gamma","gamma",this,_gamma)
 {
 }


 VariableWidthGaus2::VariableWidthGaus2(const VariableWidthGaus2& other, const char* name) :
   RooAbsPdf(other,name),
   x("x",this,other.x),
   x0("x0",this,other.x0),
   alpha("alpha",this,other.alpha),
   beta("beta",this,other.beta),
   gamma("gamma",this,other.gamma)
 {
 }



 Double_t VariableWidthGaus2::evaluate() const
 {
   Double_t sigma = alpha + beta*((x-x0)/x0) + gamma*TMath::Power((x-x0)/x0,2);
   //Double_t sigma = alpha + gamma*TMath::Exp(beta*((x-x0)/x0)-0.5*(TMath::Power((x-x0)/x0,2)));
   return(TMath::Exp(-0.5*TMath::Power(x-x0,2)/TMath::Power(sigma,2)));
 }
